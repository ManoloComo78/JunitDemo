secretKey.partTwo={{ .Values.securityProperties.secretKey.partTwo }}

## Merak (The Head Office proprietary Framework) configuration
# The properties below are used exclusively by the "Merak"

# Mutual TLS
server.ssl.key-store-password={{ .Values.securityProperties.server.ssl.keyStorePassword }}
server.ssl.key-password={{ .Values.securityProperties.server.ssl.keyPassword }}
server.ssl.trust-store-password={{ .Values.securityProperties.server.ssl.trustStorePassword }}

# Manifest
service.manifest.trust-store.password={{ .Values.securityProperties.service.manifest.trustStore.password }}

# Access Token
api-trust-tokens.access-tokens.keystore.password={{ .Values.securityProperties.apiTrustTokens.accessTokens.keystore.password }}

# Peer Token
api-trust-tokens.peer-tokens.keystore.password={{ .Values.securityProperties.apiTrustTokens.peerTokens.keystore.password }}

#JPA
spring.datasource.password={{ .Values.securityProperties.db.password }}

# BE auth
ow.normalizer.svc.sslKeyStorePassword={{ .Values.securityProperties.server.ssl.trustStorePassword }}
ow.login.password={{ .Values.securityProperties.ow.login.password }}

##kafka related schema passwords
spring.kafka.ssl.key-store-password ={{ .Values.securityProperties.kafka.ssl.keystorePassword }}
spring.kafka.ssl.key-password = {{ .Values.securityProperties.kafka.ssl.keyPassword }}
spring.kafka.ssl.trust-store-password = {{ .Values.securityProperties.kafka.ssl.truststorePassword }}
spring.kafka.properties.schema.registry.ssl.keystore.password = {{ .Values.securityProperties.kafka.schemaRegistrySsl.keystorePassword }}
spring.kafka.properties.schema.registry.ssl.key.password = {{ .Values.securityProperties.kafka.schemaRegistrySsl.keyPassword }}
spring.kafka.properties.schema.registry.ssl.truststore.password = {{ .Values.securityProperties.kafka.schemaRegistrySsl.truststorePassword }}


